<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Shubham-Verma" ignored="0" name="Test" tests="1" failures="0" timestamp="2020-06-09T14:26:47 IST" time="0.58" errors="0">
  <testcase name="@BeforeMethod preCondition" time="-1.591693006671E9" classname="com.testbroker.generic.BaseLib">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated preCondition.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated preCondition.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 13 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase name="@AfterMethod postCondition" time="-1.59169300712E9" classname="com.testbroker.generic.BaseLib">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase name="validLoginTest" time="0.0" classname="com.testbroker.scripts.LoginTest">
    <skipped/>
  </testcase> <!-- validLoginTest -->
</testsuite> <!-- Test -->
